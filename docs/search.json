[{"path":"index.html","id":"машинне-навчання","chapter":"Машинне навчання","heading":"Машинне навчання","text":"Ігор Мірошниченко2022-02-22","code":""},{"path":"index.html","id":"передмова","chapter":"Машинне навчання","heading":"Передмова","text":"Наразі підручник в процесі розробки.Якщо ви помітили неточності або помилки, будь-ласка напишіть мені: ihor.miroshnychenko@kneu.ua","code":""},{"path":"tidymodels.html","id":"tidymodels","chapter":" 1 Tidymodels","heading":" 1 Tidymodels","text":"Tidymodels - фреймворк для побудови моделей машинного навчання за допомогою мови програмування R.Розглянемо датасет з пінгвінами, який прийшов на заміну класичному датасету про іриси.Він добре підходить як під задачі регресії, так і під задачі класифікації.","code":"\nlibrary(tidymodels)\nlibrary(palmerpenguins)\n\npenguins\n## # A tibble: 344 x 8\n##    body_mass_g species island    bill_length_mm bill_depth_mm\n##          <int> <fct>   <fct>              <dbl>         <dbl>\n##  1        3750 Adelie  Torgersen           39.1          18.7\n##  2        3800 Adelie  Torgersen           39.5          17.4\n##  3        3250 Adelie  Torgersen           40.3          18  \n##  4          NA Adelie  Torgersen           NA            NA  \n##  5        3450 Adelie  Torgersen           36.7          19.3\n##  6        3650 Adelie  Torgersen           39.3          20.6\n##  7        3625 Adelie  Torgersen           38.9          17.8\n##  8        4675 Adelie  Torgersen           39.2          19.6\n##  9        3475 Adelie  Torgersen           34.1          18.1\n## 10        4250 Adelie  Torgersen           42            20.2\n## # ... with 334 more rows, and 3 more variables: flipper_length_mm <int>,\n## #   sex <fct>, year <int>\n\nglimpse(penguins)\n## Rows: 344\n## Columns: 8\n## $ body_mass_g       <int> 3750, 3800, 3250, NA, 3450, 3650, 3625, 4675, ~\n## $ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie~\n## $ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, To~\n## $ bill_length_mm    <dbl> 39.1, 39.5, 40.3, NA, 36.7, 39.3, 38.9, 39.2, ~\n## $ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, NA, 19.3, 20.6, 17.8, 19.6, ~\n## $ flipper_length_mm <int> 181, 186, 195, NA, 193, 190, 181, 195, 193, 19~\n## $ sex               <fct> male, female, female, NA, female, male, female~\n## $ year              <int> 2007, 2007, 2007, 2007, 2007, 2007, 2007, 2007~\n\npenguins <- penguins %>% \n  relocate(body_mass_g)"},{"path":"tidymodels.html","id":"розбиття-вибірки-на-тестову-та-навчальну.","chapter":" 1 Tidymodels","heading":"1.1 Розбиття вибірки на тестову та навчальну.","text":"Звичайне розбиття","code":"\nset.seed(2022)\npenguins_split <- initial_split(penguins, prop = .8)\n\npenguins_split\n## <Analysis/Assess/Total>\n## <275/69/344>\n\npenguins_train <- training(penguins_split)\n\npenguins_test  <-  testing(penguins_split)\n\ndim(penguins_train)\n## [1] 275   8\nset.seed(2022)\n\npenguins_split <- initial_split(penguins, prop = .8, strata = sex)\n\npenguins_split\n## <Analysis/Assess/Total>\n## <275/69/344>\n\npenguins_train <- training(penguins_split)\n\npenguins_test  <-  testing(penguins_split)\n\ndim(penguins_train)\n## [1] 275   8"},{"path":"tidymodels.html","id":"побудова-моделей-за-допомогою-tidymodels","chapter":" 1 Tidymodels","heading":"1.2 Побудова моделей за допомогою Tidymodels","text":"","code":"\nlinear_reg() %>% \n  set_engine(\"lm\") %>% \n  translate()\n## Linear Regression Model Specification (regression)\n## \n## Computational engine: lm \n## \n## Model fit template:\n## stats::lm(formula = missing_arg(), data = missing_arg(), weights = missing_arg())\n\nlinear_reg(penalty = 1) %>% \n  set_engine(\"glmnet\") %>% \n  translate()\n## Linear Regression Model Specification (regression)\n## \n## Main Arguments:\n##   penalty = 1\n## \n## Computational engine: glmnet \n## \n## Model fit template:\n## glmnet::glmnet(x = missing_arg(), y = missing_arg(), weights = missing_arg(), \n##     family = \"gaussian\")\n\nlinear_reg() %>% \n  set_engine(\"stan\") %>% \n  translate()\n## Linear Regression Model Specification (regression)\n## \n## Computational engine: stan \n## \n## Model fit template:\n## rstanarm::stan_glm(formula = missing_arg(), data = missing_arg(), \n##     weights = missing_arg(), family = stats::gaussian, refresh = 0)\nlm_model <- \n  linear_reg() %>% \n  set_engine(\"lm\")\n\nlm_form_fit <- \n  lm_model %>% \n  fit(body_mass_g ~ bill_length_mm + bill_depth_mm, data = penguins_train)\n\nlm_xy_fit <- \n  lm_model %>% \n  fit_xy(\n    x = penguins_train %>% select(bill_length_mm, bill_depth_mm),\n    y = penguins_train %>% pull(body_mass_g)\n  )\n\nlm_form_fit\n## parsnip model object\n## \n## Fit time:  0ms \n## \n## Call:\n## stats::lm(formula = body_mass_g ~ bill_length_mm + bill_depth_mm, \n##     data = data)\n## \n## Coefficients:\n##    (Intercept)  bill_length_mm   bill_depth_mm  \n##        3698.15           69.79         -150.48\n\nlm_xy_fit\n## parsnip model object\n## \n## Fit time:  0ms \n## \n## Call:\n## stats::lm(formula = ..y ~ ., data = data)\n## \n## Coefficients:\n##    (Intercept)  bill_length_mm   bill_depth_mm  \n##        3698.15           69.79         -150.48\nlm_form_fit %>% \n  extract_fit_engine()\n## \n## Call:\n## stats::lm(formula = body_mass_g ~ bill_length_mm + bill_depth_mm, \n##     data = data)\n## \n## Coefficients:\n##    (Intercept)  bill_length_mm   bill_depth_mm  \n##        3698.15           69.79         -150.48\n\nlm_form_fit %>% \n  extract_fit_engine() %>% \n  vcov()\n##                (Intercept) bill_length_mm bill_depth_mm\n## (Intercept)     240286.265    -2494.52933   -7522.27997\n## bill_length_mm   -2494.529       45.19213      29.53007\n## bill_depth_mm    -7522.280       29.53007     362.09611\n\nmodel_res <- \n  lm_form_fit %>% \n  extract_fit_engine() %>% \n  summary()\n\nparam_est <- coef(model_res)\n\nclass(param_est)\n## [1] \"matrix\" \"array\"\n\nparam_est\n##                  Estimate Std. Error   t value     Pr(>|t|)\n## (Intercept)    3698.15105 490.190030  7.544321 6.970546e-13\n## bill_length_mm   69.79313   6.722509 10.382006 1.820525e-21\n## bill_depth_mm  -150.47740  19.028823 -7.907867 6.733650e-14\n\nlm_form_fit %>% \n  tidy()\n## # A tibble: 3 x 5\n##   term           estimate std.error statistic  p.value\n##   <chr>             <dbl>     <dbl>     <dbl>    <dbl>\n## 1 (Intercept)      3698.     490.        7.54 6.97e-13\n## 2 bill_length_mm     69.8      6.72     10.4  1.82e-21\n## 3 bill_depth_mm    -150.      19.0      -7.91 6.73e-14\n\nlm_form_fit %>% \n  glance()\n## # A tibble: 1 x 12\n##   r.squared adj.r.squared sigma statistic  p.value    df logLik   AIC\n##       <dbl>         <dbl> <dbl>     <dbl>    <dbl> <dbl>  <dbl> <dbl>\n## 1     0.449         0.445  599.      110. 1.16e-35     2 -2132. 4271.\n## # ... with 4 more variables: BIC <dbl>, deviance <dbl>,\n## #   df.residual <int>, nobs <int>\npenguins_test_small <- penguins_test %>%\n  slice(1:5)\n\npredict(lm_form_fit, new_data = penguins_test_small)\n## # A tibble: 5 x 1\n##   .pred\n##   <dbl>\n## 1 3590.\n## 2 3918.\n## 3 3574.\n## 4 3540.\n## 5 3673.\n\npenguins_test_small %>% \n  select(body_mass_g) %>% \n  bind_cols(predict(lm_form_fit, penguins_test_small)) %>% \n  bind_cols(predict(lm_form_fit, penguins_test_small, type = \"pred_int\")) \n## # A tibble: 5 x 4\n##   body_mass_g .pred .pred_lower .pred_upper\n##         <int> <dbl>       <dbl>       <dbl>\n## 1        4250 3590.       2404.       4775.\n## 2        3200 3918.       2737.       5099.\n## 3        3700 3574.       2390.       4758.\n## 4        3450 3540.       2356.       4724.\n## 5        4200 3673.       2481.       4866."},{"path":"tidymodels.html","id":"створення-робочого-процесу-для-побудови-моделей","chapter":" 1 Tidymodels","heading":"1.3 Створення робочого процесу для побудови моделей","text":"","code":"\nlm_model <- \n  linear_reg() %>% \n  set_engine(\"lm\")\n\nlm_wflow <- \n  workflow() %>% \n  add_model(lm_model)\n\nlm_wflow\n## == Workflow ==============================================================\n## Preprocessor: None\n## Model: linear_reg()\n## \n## -- Model -----------------------------------------------------------------\n## Linear Regression Model Specification (regression)\n## \n## Computational engine: lm\n\nlm_wflow <- \n  lm_wflow %>% \n  add_formula(body_mass_g ~ bill_length_mm + bill_depth_mm)\n\nlm_fit <- fit(lm_wflow, penguins_train)\n\nlm_fit\n## == Workflow [trained] ====================================================\n## Preprocessor: Formula\n## Model: linear_reg()\n## \n## -- Preprocessor ----------------------------------------------------------\n## body_mass_g ~ bill_length_mm + bill_depth_mm\n## \n## -- Model -----------------------------------------------------------------\n## \n## Call:\n## stats::lm(formula = ..y ~ ., data = data)\n## \n## Coefficients:\n##    (Intercept)  bill_length_mm   bill_depth_mm  \n##        3698.15           69.79         -150.48\n\npredict(lm_fit, penguins_train %>% \n          slice(1:3))\n## # A tibble: 3 x 1\n##   .pred\n##   <dbl>\n## 1 3837.\n## 2 3802.\n## 3 3355.\n\nlm_fit %>% \n  update_formula(body_mass_g ~ bill_length_mm)\n## == Workflow ==============================================================\n## Preprocessor: Formula\n## Model: linear_reg()\n## \n## -- Preprocessor ----------------------------------------------------------\n## body_mass_g ~ bill_length_mm\n## \n## -- Model -----------------------------------------------------------------\n## Linear Regression Model Specification (regression)\n## \n## Computational engine: lm\nlm_wflow <- \n  lm_wflow %>% \n  remove_formula() %>% \n  add_variables(outcome = body_mass_g, predictors = c(contains(\"_\")))\n\nlm_wflow\n## == Workflow ==============================================================\n## Preprocessor: Variables\n## Model: linear_reg()\n## \n## -- Preprocessor ----------------------------------------------------------\n## Outcomes: body_mass_g\n## Predictors: c(contains(\"_\"))\n## \n## -- Model -----------------------------------------------------------------\n## Linear Regression Model Specification (regression)\n## \n## Computational engine: lm\n\nfit(lm_wflow, penguins_train)\n## == Workflow [trained] ====================================================\n## Preprocessor: Variables\n## Model: linear_reg()\n## \n## -- Preprocessor ----------------------------------------------------------\n## Outcomes: body_mass_g\n## Predictors: c(contains(\"_\"))\n## \n## -- Model -----------------------------------------------------------------\n## \n## Call:\n## stats::lm(formula = ..y ~ ., data = data)\n## \n## Coefficients:\n##       (Intercept)     bill_length_mm      bill_depth_mm  \n##         -6656.034              2.846             21.343  \n## flipper_length_mm  \n##            51.511\nformulas <- list(\n  bill_length = body_mass_g ~ bill_length_mm,\n  bill_depth = body_mass_g ~ bill_depth_mm,\n  bill_length_depth = body_mass_g ~ bill_length_mm + bill_depth_mm + sex,\n  flipper = body_mass_g ~ flipper_length_mm\n)\n\nlibrary(workflowsets)\n\nformulas_model <- workflow_set(preproc = formulas, models = list(lm = lm_model))\n\nformulas_model\n## # A workflow set/tibble: 4 x 4\n##   wflow_id             info             option    result    \n##   <chr>                <list>           <list>    <list>    \n## 1 bill_length_lm       <tibble [1 x 4]> <opts[0]> <list [0]>\n## 2 bill_depth_lm        <tibble [1 x 4]> <opts[0]> <list [0]>\n## 3 bill_length_depth_lm <tibble [1 x 4]> <opts[0]> <list [0]>\n## 4 flipper_lm           <tibble [1 x 4]> <opts[0]> <list [0]>\n\nformulas_model$info[[1]]\n## # A tibble: 1 x 4\n##   workflow   preproc model      comment\n##   <list>     <chr>   <chr>      <chr>  \n## 1 <workflow> formula linear_reg \"\"\n\nextract_workflow(formulas_model, id = \"flipper_lm\")\n## == Workflow ==============================================================\n## Preprocessor: Formula\n## Model: linear_reg()\n## \n## -- Preprocessor ----------------------------------------------------------\n## body_mass_g ~ flipper_length_mm\n## \n## -- Model -----------------------------------------------------------------\n## Linear Regression Model Specification (regression)\n## \n## Computational engine: lm\n\nformulas_model <-\n   formulas_model %>%\n   mutate(fit = map(info, ~ fit(.x$workflow[[1]], penguins_train)))\n\nformulas_model\n## # A workflow set/tibble: 4 x 5\n##   wflow_id             info             option    result     fit       \n##   <chr>                <list>           <list>    <list>     <list>    \n## 1 bill_length_lm       <tibble [1 x 4]> <opts[0]> <list [0]> <workflow>\n## 2 bill_depth_lm        <tibble [1 x 4]> <opts[0]> <list [0]> <workflow>\n## 3 bill_length_depth_lm <tibble [1 x 4]> <opts[0]> <list [0]> <workflow>\n## 4 flipper_lm           <tibble [1 x 4]> <opts[0]> <list [0]> <workflow>\n\nformulas_model$fit[[1]]\n## == Workflow [trained] ====================================================\n## Preprocessor: Formula\n## Model: linear_reg()\n## \n## -- Preprocessor ----------------------------------------------------------\n## body_mass_g ~ bill_length_mm\n## \n## -- Model -----------------------------------------------------------------\n## \n## Call:\n## stats::lm(formula = ..y ~ ., data = data)\n## \n## Coefficients:\n##    (Intercept)  bill_length_mm  \n##         572.09           82.07"},{"path":"tidymodels.html","id":"фіча-інженірінг","chapter":" 1 Tidymodels","heading":"1.4 Фіча інженірінг","text":"","code":"\n\npenguins_train\n## # A tibble: 275 x 8\n##    body_mass_g species island    bill_length_mm bill_depth_mm\n##          <int> <fct>   <fct>              <dbl>         <dbl>\n##  1        3800 Adelie  Torgersen           39.5          17.4\n##  2        3250 Adelie  Torgersen           40.3          18  \n##  3        3450 Adelie  Torgersen           36.7          19.3\n##  4        3625 Adelie  Torgersen           38.9          17.8\n##  5        3475 Adelie  Torgersen           34.1          18.1\n##  6        3300 Adelie  Torgersen           37.8          17.1\n##  7        3700 Adelie  Torgersen           37.8          17.3\n##  8        3325 Adelie  Torgersen           34.4          18.4\n##  9        3400 Adelie  Biscoe              37.8          18.3\n## 10        3800 Adelie  Biscoe              35.9          19.2\n## # ... with 265 more rows, and 3 more variables: flipper_length_mm <int>,\n## #   sex <fct>, year <int>\n\nsimple_penguins <- \n  recipe(body_mass_g ~ bill_length_mm + bill_depth_mm + sex,\n         data = penguins_train) %>%\n  step_log(bill_depth_mm, base = 10) %>% \n  step_dummy(all_nominal_predictors())\n\nsimple_penguins\n## Recipe\n## \n## Inputs:\n## \n##       role #variables\n##    outcome          1\n##  predictor          3\n## \n## Operations:\n## \n## Log transformation on bill_depth_mm\n## Dummy variables from all_nominal_predictors()\n# lm_wflow %>% \n# add_recipe(simple_penguins)\n\nlm_wflow <- \n  lm_wflow %>% \n  remove_variables() %>% \n  add_recipe(simple_penguins)\n\nlm_wflow\n## == Workflow ==============================================================\n## Preprocessor: Recipe\n## Model: linear_reg()\n## \n## -- Preprocessor ----------------------------------------------------------\n## 2 Recipe Steps\n## \n## * step_log()\n## * step_dummy()\n## \n## -- Model -----------------------------------------------------------------\n## Linear Regression Model Specification (regression)\n## \n## Computational engine: lm\n\nlm_fit <- fit(lm_wflow, penguins_train)\n\npredict(lm_fit, penguins_train %>% slice(1:3))\n## # A tibble: 3 x 1\n##   .pred\n##   <dbl>\n## 1 3479.\n## 2 3351.\n## 3 2923.\n\nlm_fit %>% \n  tidy()\n## # A tibble: 4 x 5\n##   term           estimate std.error statistic  p.value\n##   <chr>             <dbl>     <dbl>     <dbl>    <dbl>\n## 1 (Intercept)     15141.     897.       16.9  9.06e-44\n## 2 bill_length_mm     31.3      5.73      5.46 1.10e- 7\n## 3 bill_depth_mm  -10396.     636.      -16.3  7.54e-42\n## 4 sex_male          958.      66.3      14.5  3.16e-35\npenguins_train %>% \n  ggplot(aes(sex)) +\n  geom_bar()\n\nsimple_penguins <- \n  recipe(body_mass_g ~ bill_length_mm + bill_depth_mm + sex,\n         data = penguins_train) %>%\n  step_log(bill_depth_mm, base = 10) %>% \n  step_dummy(all_nominal_predictors()) %>% # one_hot = TRUE\n  step_unknown(sex, new_level = \"unknown sex\")\n\n# step_novel()\n# step_other(var_name, threshold = 0.01)\n\nsimple_penguins\n## Recipe\n## \n## Inputs:\n## \n##       role #variables\n##    outcome          1\n##  predictor          3\n## \n## Operations:\n## \n## Log transformation on bill_depth_mm\n## Dummy variables from all_nominal_predictors()\n## Unknown factor level assignment for sex\nggplot(penguins_train, aes(x = flipper_length_mm, y = body_mass_g)) + \n  geom_point() + \n  facet_wrap(~ species) + \n  geom_smooth(method = lm, formula = y ~ x, se = FALSE, color = \"lightblue\") + \n  scale_x_log10() + \n  scale_y_log10() + \n  labs(x = \"Довжина плавника\", y = \"Вага\")\n\n# body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm + sex + flipper_length_mm:sex\n\n# body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm*sex\n\nsimple_penguins <- \n  recipe(body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm + sex,\n         data = penguins_train) %>%\n  step_log(bill_depth_mm, base = 10) %>% \n  step_dummy(all_nominal_predictors()) %>% # one_hot = TRUE\n  step_unknown(sex, new_level = \"unknown sex\") %>% \n  step_interact( ~ flipper_length_mm:sex)\nlibrary(patchwork)\nlibrary(splines)\n\nplot_smoother <- function(deg_free) {\n  ggplot(penguins_train, aes(x = bill_depth_mm, y = body_mass_g)) + \n    geom_point(alpha = .2) + \n    scale_y_log10() +\n    geom_smooth(\n      method = lm,\n      formula = y ~ ns(x, df = deg_free),\n      color = \"lightblue\",\n      se = FALSE\n    ) +\n    labs(title = paste(deg_free, \"Spline Terms\"),\n         y = \"Вага\")\n}\n\n( plot_smoother(2) + plot_smoother(5) ) / ( plot_smoother(20) + plot_smoother(30) )\n\nsimple_penguins <- \n  recipe(body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm + sex,\n         data = penguins_train) %>%\n  step_log(bill_depth_mm, base = 10) %>% \n  step_dummy(all_nominal_predictors()) %>% # one_hot = TRUE\n  step_unknown(sex, new_level = \"unknown sex\") %>% \n  step_interact( ~ flipper_length_mm:sex) %>% \n  step_ns(bill_depth_mm, deg_free = 5)\ntidy(simple_penguins)\n## # A tibble: 5 x 6\n##   number operation type     trained skip  id            \n##    <int> <chr>     <chr>    <lgl>   <lgl> <chr>         \n## 1      1 step      log      FALSE   FALSE log_drhW1     \n## 2      2 step      dummy    FALSE   FALSE dummy_rDO3E   \n## 3      3 step      unknown  FALSE   FALSE unknown_Itj5p \n## 4      4 step      interact FALSE   FALSE interact_RfO0k\n## 5      5 step      ns       FALSE   FALSE ns_6YYfP\n\nsimple_penguins <- \n  recipe(body_mass_g ~ bill_length_mm + bill_depth_mm + flipper_length_mm + sex,\n         data = penguins_train) %>%\n  step_log(bill_depth_mm, base = 10) %>% \n  step_unknown(sex, new_level = \"unknown sex\", id = \"my_id\") # add id\n#  step_dummy(all_nominal_predictors()) %>% # one_hot = TRUE\n#  step_interact( ~ flipper_length_mm:sex) %>% \n#  step_ns(bill_depth_mm, deg_free = 2)\n\ntidy(simple_penguins)\n## # A tibble: 2 x 6\n##   number operation type    trained skip  id       \n##    <int> <chr>     <chr>   <lgl>   <lgl> <chr>    \n## 1      1 step      log     FALSE   FALSE log_M3wCq\n## 2      2 step      unknown FALSE   FALSE my_id\n\nlm_wflow <- \n  workflow() %>% \n  add_model(lm_model) %>% \n  add_recipe(simple_penguins)\n\nlm_fit <- fit(lm_wflow, penguins_train)\n\nestimated_recipe <- lm_fit %>% \n  extract_recipe(estimated = TRUE)\npenguins_test_res <- predict(lm_fit, new_data = penguins_train %>%\n                               select(-body_mass_g))\n\npenguins_test_res\n## # A tibble: 275 x 1\n##    .pred\n##    <dbl>\n##  1 3327.\n##  2 3617.\n##  3 3441.\n##  4 3103.\n##  5 3549.\n##  6 3363.\n##  7 3117.\n##  8 3174.\n##  9 2797.\n## 10 3298.\n## # ... with 265 more rows\n\n\npenguins_test_res <- bind_cols(penguins_test_res, penguins_train %>%\n                                 select(body_mass_g))\n\npenguins_test_res\n## # A tibble: 275 x 2\n##    .pred body_mass_g\n##    <dbl>       <int>\n##  1 3327.        3800\n##  2 3617.        3250\n##  3 3441.        3450\n##  4 3103.        3625\n##  5 3549.        3475\n##  6 3363.        3300\n##  7 3117.        3700\n##  8 3174.        3325\n##  9 2797.        3400\n## 10 3298.        3800\n## # ... with 265 more rows\n\nggplot(penguins_test_res, aes(x = body_mass_g, y = .pred)) + \n  # Create a diagonal line:\n  geom_abline(lty = 2) + \n  geom_point(alpha = 0.5) + \n  labs(y = \"Predicted Body Mass\", x = \"Body Mass\") +\n  # Scale and size the x- and y-axis uniformly:\n  coord_obs_pred()\n\nrmse(penguins_test_res, truth = body_mass_g, estimate = .pred)\n## # A tibble: 1 x 3\n##   .metric .estimator .estimate\n##   <chr>   <chr>          <dbl>\n## 1 rmse    standard        345.\n\npenguins_metrics <- metric_set(rmse, rsq, mae)\npenguins_metrics(penguins_test_res, truth = body_mass_g, estimate = .pred)\n## # A tibble: 3 x 3\n##   .metric .estimator .estimate\n##   <chr>   <chr>          <dbl>\n## 1 rmse    standard     345.   \n## 2 rsq     standard       0.815\n## 3 mae     standard     284."},{"path":"classification.html","id":"classification","chapter":" 2 Класифікація","heading":" 2 Класифікація","text":"","code":""},{"path":"references.html","id":"references","chapter":"Література","heading":"Література","text":"text","code":""}]
